"""Tests for MD parser functionality."""

import pytest
from datetime import datetime
from talkshow.parser.md_parser import MDParser
from talkshow.parser.time_extractor import TimeExtractor


class TestTimeExtractor:
    """Test TimeExtractor functionality."""
    
    def test_extract_timestamp_basic(self):
        """Test basic timestamp extraction."""
        content = "2025-07-28 23:16:38.431711"
        result = TimeExtractor.extract_first_timestamp(content)
        
        assert result is not None
        assert result.year == 2025
        assert result.month == 7
        assert result.day == 28
        assert result.hour == 23
        assert result.minute == 16
    
    def test_extract_from_command_output(self):
        """Test extraction from command output."""
        content = '''```bash
python -c "from datetime import datetime;print(datetime.now())"
```

```
python -c "from datetime import datetime;print(datetime.now())"
2025-07-28 23:16:38.431711
(rlflow) linaro@g89:~/workspace/sandbox$
```'''
        
        result = TimeExtractor.extract_from_assistant_section(content)
        assert result is not None
        assert result.year == 2025
    
    def test_no_timestamp_found(self):
        """Test when no timestamp is found."""
        content = "This is just some text without any timestamp"
        result = TimeExtractor.extract_first_timestamp(content)
        assert result is None


class TestMDParser:
    """Test MDParser functionality."""
    
    def test_parse_simple_content(self):
        """Test parsing simple markdown content."""
        content = '''<!-- Generated by SpecStory -->

# Test Chat (2025-07-28 15:16Z)

_**User**_

Hello

---

_**Assistant**_




---

```bash
python -c "from datetime import datetime;print(datetime.now())"
```

```
2025-07-28 23:16:38.431711
```

---

Hi there! How can I help you?

---
'''
        
        parser = MDParser()
        session = parser.parse_content(content, "test.md")
        
        assert session is not None
        assert session.meta.filename == "test.md"
        assert len(session.qa_pairs) == 1
        assert session.qa_pairs[0].question == "Hello"
        assert "Hi there! How can I help you?" in session.qa_pairs[0].answer
        # Note: timestamp extraction might not work in this simplified test case
        # assert session.qa_pairs[0].timestamp is not None
    
    def test_extract_theme_from_filename(self):
        """Test theme extraction from filename."""
        filename = "2025-07-28_15-16Z-just-a-friendly-hello.md"
        parser = MDParser()
        
        # Create a simple session to test theme extraction
        content = '''_**User**_
test
---
_**Assistant**_
response
---'''
        
        session = parser.parse_content(content, filename)
        assert session.meta.theme == "just-a-friendly-hello"
    
    def test_multiple_qa_pairs(self):
        """Test parsing multiple QA pairs."""
        content = '''_**User**_

First question

---

_**Assistant**_

First answer

---

_**User**_

Second question

---

_**Assistant**_

Second answer

---
'''
        
        parser = MDParser()
        session = parser.parse_content(content, "test.md")
        
        assert session is not None
        assert len(session.qa_pairs) == 2
        assert session.qa_pairs[0].question == "First question"
        assert session.qa_pairs[0].answer == "First answer"
        assert session.qa_pairs[1].question == "Second question"
        assert session.qa_pairs[1].answer == "Second answer"